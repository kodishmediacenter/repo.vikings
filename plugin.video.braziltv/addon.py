# encoded by pyprotect
# http://gabrielsilva.tk/pyprotect

import base64, codecs
magic = '77u/IyAtKi0gY29kaW5nOiB1dGYtOCAtKi0NCg0KJycnDQovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQovLy8vICAgICAgICAgICAgIMKpIDIwMTkgICAgICAgICAgICAgLy8vLw0KLy8vLyBCUkFaSUxUViAtIERJUkVJVE9TIFJFU0VSVkFET1MgLy8vLw0KLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KLy8vLyAgIENPUElBUiDDiSBDT0lTQSBERSBNT0xFUVVFISAgIC8vLy8NCi8vLy8gU0UgVk9Dw4ogTsODTyBURU0gQ0FQQUNJREFERSBQUkEgLy8vLw0KLy8vLyBDUklBUiBBTEdPIFBSw5NQUklPLCBQRUxPIE1FTk9TIC8vLy8NCi8vLy8gICBSRVNQRUlURSBPIFRSQUJBTEhPIEFMSEVJTy4gIC8vLy8NCi8vLy8gICAgLSBURU5IQSBPUklHSU5BTElEQURFIC0gICAgIC8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCicnJw0KDQppbXBvcnQgc3lzDQoNCnJlbG9hZChzeXMpDQpzeXMuc2V0ZGVmYXVsdGVuY29kaW5nKCd1dGY4JykNCg0KaW1wb3J0IHJlDQppbXBvcnQgb3MNCmltcG9ydCB4bWwuZXRyZWUuRWxlbWVudFRyZWUgYXMgRVQNCmltcG9ydCBtYXRoDQppbXBvcnQgYmFzZTY0DQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQ0KaW1wb3J0IHhibWMNCmltcG9ydCB1cmxsaWINCmltcG9ydCB1cmxsaWIyDQppbXBvcnQgdXJscGFyc2UNCmltcG9ydCB4Ym1jZ3VpDQppbXBvcnQgeGJtY2FkZG9uDQppbXBvcnQgeGJtY3BsdWdpbg0KDQppZiBzeXMuYXJndlsxXSA9PSAnY2xlYXJFUEcnOg0KICAgIFBhdGggPSB4Ym1jLnRyYW5zbGF0ZVBhdGgoIHhibWNhZGRvbi5BZGRvbigpLmdldEFkZG9uSW5mbygncGF0aCcpICkuZGVjb2RlKCJ1dGYtOCIpDQogICAgYXJxdWl2byA9IG9zLnBhdGguam9pbiggUGF0aCwgIlx4NzJceDY1XHg3M1x4NmZceDc1XHg3Mlx4NjNceDY1XHg3MyIpDQogICAgYXJxdWl2byA9IG9zLnBhdGguam9pbihhcnF1aXZvLCAiXHg1Mlx4NDhceDQxXHg0NVx4NTBceDQ3XHgyZVx4NzhceDZkXHg2YyIpDQogICAgdHJ5Og0KICAgICAgICBvcy5yZW1vdmUoYXJxdWl2bykNCiAgICBleGNlcHQ6DQogICAgICAgIHBhc3MNCiAgICB4Ym1jYWRkb24uQWRkb24oInBsdWdpbi52aWRlby5icmF6aWx0diIpLnNldFNldHRpbmcoImVwZ19sYXN0IiwgIiIpDQogICAgYWRkb24gPSB4Ym1jYWRkb24uQWRkb24oJ3BsdWdpbi52aWRlby5icmF6aWx0dicpDQogICAgeGJtY2d1aS5EaWFsb2coKS5vayhhZGRvbi5nZXRBZGRvbkluZm8oJ25hbWUnKSwgJ1tCXVtDT0xPUiB5ZWxsb3ddRVBHIGV4Y2x1w61kbyBjb20gc3VjZXNzbyFbL0NPTE9SXVsvQl0nLCAnTsOjbyBzZSBlc3F1ZcOnYSBkZSBzYWx2YXIgc3VhcyBjb25maWd1cmHDp8O1ZXMgY2xpY2FuZG8gZW0gT0suJykNCiAgICB4Ym1jLnNsZWVwKDIwMDApDQogICAgZXhpdCgpDQoNCnNlcnZlclVSTCA9ICJceDY4XHg3NFx4NzRceDcwXHgzYVx4MmZceDJmXHg2N1x4NzNceDY4XHg2Zlx4NzNceDc0XHgyZVx4NjdceDcxXHgyZlx4NjJceDcyXHg2MVx4N2FceDY5XHg2Y1x4NzRceDc2XHgyZiINCmVwZ191cmwgPSBzZXJ2ZXJVUkwgKyAiXHg2NVx4NzBceDY3Ig0KYmFzZV91cmwgPSBzeXMuYXJndlswXQ0KYWRkb25faGFuZGxlID0gaW50KHN5cy5hcmd2WzFdKQ0KYXJncyA9IHVybHBhcnNlLnBhcnNlX3FzKHN5cy5hcmd2WzJdWzE6XSkNCnZlcnNhb19hdHVhbCA9ICcwLjcnDQoNCnhibWNwbHVnaW4uc2V0Q29udGVudChhZGRvbl9oYW5kbGUsICdtb3ZpZXMnKQ0KDQpkZWYgY2hlY2tTZXR0aW5nc0ZpbGUoKToNCiAgICBQYXRoID0geGJtYy50cmFuc2xhdGVQYXRoKCB4Ym1jYWRkb24uQWRkb24oKS5nZXRBZGRvbkluZm8oJ3BhdGgnKSApLmRlY29kZSgidXRmLTgiKQ0KICAgIGFycXVpdm8gPSBvcy5wYXRoLmpvaW4oIFBhdGgsICJceDcyXHg2NVx4NzNceDZmXHg3NVx4NzJceDYzXHg2NVx4NzMiKQ0KDQogICAgZGlyX2V4aXN0cyA9IG9zLnBhdGguaXNkaXIoYXJxdWl2bykNCiAgICBpZiBkaXJfZXhpc3RzID09IEZhbHNlOiBvcy5ta2RpcihhcnF1aXZvKQ0KICAgIGFycXVpdm8gPSBvcy5wYXRoLmpvaW4oYXJxdWl2bywgIlx4NzNceDY1XHg3NFx4NzRceDY5XHg2ZVx4NjdceDczXHgyZVx4NzhceDZkXHg2YyIpDQogICAgZXhpc3RzID0gb3MucGF0aC5pc2ZpbGUoYXJxdWl2bykNCiAgICBpZiBleGlzdHMgPT0gRmFsc2U6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHJlc3BvbnNlID0gdXJsbGliMi51cmxvcGVuKHNlcnZlclVSTCArICJceDczXHg2NVx4NzRceDc0XHg2OVx4NmVceDY3XHg3M1x4MmVceDc4XHg2ZFx4NmMiKQ0KICAgICAgICAgICAgaWYgcmVzcG9uc2UgYW5kIHJlc3BvbnNlLmdldGNvZGUoKSA9PSAyMDA6DQogICAgICAgICAgICAgICAgYXJxdWl2b19ub3ZvID0gcmVzcG9uc2UucmVhZCgpDQogICAgICAgICAgICAgICAgZmlsZSA9IG9wZW4oYXJxdWl2bywgInciKQ0KICAgICAgICAgICAgICAgIGZpbGUud3JpdGUoYXJxdWl2b19ub3ZvKQ0KICAgICAgICAgICAgICAgIGZpbGUuY2xvc2UoKQ0KICAgICAgICAgICAgcmVzcG9uc2UuY2xvc2UoKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBleGl0KCkNCg0KZGVmIGNoZWNrRG93bmxvYWRlckZpbGUoKToNCiAgICBQYXRoID0geGJtYy50cmFuc2xhdGVQYXRoKCB4Ym1jYWRkb24uQWRkb24oKS5nZXRBZGRvbkluZm8oJ3BhdGgnKSApLmRlY29kZSgidXRmLTgiKQ0KICAgIGFycXVpdm8gPSBvcy5wYXRoLmpvaW4oUGF0aCwgIlx4NjRceDZmXHg3N1x4NmVceDZjXHg2Zlx4NjFceDY0XHg2NVx4NzJceDJlXHg3MFx4NzkiKQ0KICAgIGV4aXN0cyA9IG9zLnBhdGguaXNmaWxlKGFycXVpdm8pDQogICAgaWYgZXhpc3RzID09IEZhbHNlOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICByZXNwb25zZSA9IHVybGxpYjIudXJsb3BlbihzZXJ2ZXJVUkwgKyAiXHg2NFx4NmZceDc3XHg2ZVx4NmNceDZmXHg2MVx4NjRceDY1XHg3Mlx4MmVceDcwXHg3OSIpDQogICAgICAgICAgICBpZiByZXNwb25zZSBhbmQgcmVzcG9uc2UuZ2V0Y29kZSgpID09IDIwMDoNCiAgICAgICAgICAgICAgICBhcnF1aXZvX25vdm8gPSByZXNwb25zZS5yZWFkKCkNCiAgICAgICAgICAgICAgICBmaWxlID0gb3BlbihhcnF1aXZvLCAidyIpDQogICAgICAgICAgICAgICAgZmlsZS53cml0ZShhcnF1aXZvX25vdm8pDQogICAgICAgICAgICAgICAgZmlsZS5jbG9zZSgpDQogICAgICAgICAgICByZXNwb25zZS5jbG9zZSgpDQogICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgIGV4aXQoKQ0KDQpjaGVja1NldHRpbmdzRmlsZSgpDQpjaGVja0Rvd25sb2FkZXJGaWxlKCkNCg0KaW1wb3J0IGRvd25sb2FkZXINCg0KYWR1bHRIaWRlID0geGJtY2FkZG9uLkFkZG9uKCJwbHVnaW4udmlkZW8uYnJhemlsdHYiKS5nZXRTZXR0aW5nKCJoaWRlIikNCmFkdWx0UGFzc3dvcmQgPSB4Ym1jYWRkb24uQWRkb24oInBsdWdpbi52aWRlby5icmF6aWx0diIpLmdldFNldHRpbmcoInBhc3N3b3JkIikNCmVwZ0VuYWJsZWQgPSB4Ym1jYWRkb24uQWRkb24oInBsdWdpbi52aWRlby5icmF6aWx0diIpLmdldFNldHRpbmcoImVwZyIpDQplcGdMYXN0ID0geGJtY2FkZG9uLkFkZG9uKCJwbHVnaW4udmlkZW8uYnJhemlsdHYiKS5nZXRTZXR0aW5nKCJlcGdfbGFzdCIpDQplcGdEYXlzID0geGJtY2FkZG9uLkFkZG9uKCJwbHVnaW4udmlkZW8uYnJhemlsdHYiKS5nZXRTZXR0aW5nKCJlcGdfZGF5cyIpDQplbmFibGVIRENoYW5uZWxzID0geGJtY2FkZG9uLkFkZG9uKCJwbHVnaW4udmlkZW8uYnJhemlsdHYiKS5nZXRTZXR0aW5nKCJzaG93aGQiKQ0KZW5hYmxlU0RDaGFubmVscyA9IHhibWNhZGRvbi5BZGRvbigicGx1Z2luLnZpZGVvLmJyYXppbHR2IikuZ2V0U2V0dGluZygic2hvd3NkIikNCmVuYWJsZUFMVENoYW5uZWxzID0geGJtY2FkZG9uLkFkZG9uKCJwbHVnaW4udmlkZW8uYnJhemlsdHYiKS5nZXRTZXR0aW5nKCJzaG93YWx0IikNCg0KZGVmIG5vdGlmeShhZGRvbklkLCBtZXNzYWdlLCB0aW1lU2hvd249NTAwMCk6DQogICAgYWRkb24gPSB4Ym1jYWRkb24uQWRkb24oYWRkb25JZCkNCiAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCdOb3RpZmljYXRpb24oJXMsICVzLCAlZCwgJXMpJyAlIChhZGRvbi5nZXRBZGRvbkluZm8oJ25hbWUnKSwgbWVzc2FnZSwgdGltZVNob3duLCBhZGRvbi5nZXRBZGRvbkluZm8oJ2ljb24nKSkpDQoNCmRlZiBidWlsZF91cmwocXVlcnkpOg0KICAgIHRyeToNCiAgICAgICAgcmV0dXJuIGJhc2VfdXJsICsgJz8nICsgdXJsbGliLnVybGVuY29kZShxdWVyeSkNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHJldHVybiAnJw0KDQpkZWYgYWRkRGlyKG5hbWUsIHVybCwgaW1nLCBmb2xkZXI9RmFsc2UpOg0KICAgIGxpID0geGJtY2d1aS5MaXN0SXRlbShuYW1lLCBpY29uSW1hZ2U9aW1nLCB0aHVtYm5haWxJbWFnZT1pbWcpDQogICAgbGkuc2V0UHJvcGVydHkoJ0lzUGxheWFibGUnLCAnZmFsc2UnKQ0KICAgIGxpLnNldEluZm8odHlwZT0ndmlkZW8nLCBpbmZvTGFiZWxzPXsncGxvdCc6ICdbQl1bQ09MT1IgbGltZV1CcmF6aWxUVlsvQ09MT1JdIC0gW0NPTE9SIHllbGxvd11JUFRWIGxpdnJlIHBhcmEgdG9kb3MuWy9DT0xPUl1bQ1JdW0NPTE9SIGxpZ2h0Ymx1ZV1Ow6NvIGFjZWl0ZSBpbWl0YcOnw7VlcyFbL0NPTE9SXSBbQ09MT1IgcmVkXcKpIDIwMTlbL0NPTE9SXVtDUl1bQ1JdW0NPTE9SIHdoaXRlXVNpdGUgb2ZpY2lhbDpbL0NPTE9SXSBbQ09MT1IgZ3JheV1odHRwOi8vYml0Lmx5L0JyYXppbFRWS29kaVsvQ09MT1JdW0NSXVtDUl1bQ09MT1IgbWFnZW50YV1JbmNlbnRpdmUtbm9zIGEgY29udGludWFyIGVtOlsvQ09MT1JdIFtDT0xPUiBwaW5rXWh0dHA6Ly9iaXQubHkvQnJhemlsVFZEb2FyWy9DT0xPUl1bL0JdJyB9KQ0KICAgIHhibWNwbHVnaW4uYWRkRGlyZWN0b3J5SXRlbShoYW5kbGU9YWRkb25faGFuZGxlLCB1cmw9dXJsLCBsaXN0aXRlbT1saSwgaXNGb2xkZXI9Zm9sZGVyKQ0KDQpkZWYgYWRkRGlyV2l0aE1ldGEobmFtZSwgdXJsLCBpbWcsIG1ldGEsIGZvbGRlcj1GYWxzZSk6DQogICAgbGkgPSB4Ym1jZ3VpLkxpc3RJdGVtKG5hbWUsIGljb25JbWFnZT1pbWcsIHRodW1ibmFpbEltYWdlPWltZykNCiAgICBsaS5zZXRQcm9wZXJ0eSgnSXNQbGF5YWJsZScsICdmYWxzZScpDQogICAgbGkuc2V0SW5mbyh0eXBlPSd2aWRlbycsIGluZm9MYWJlbHM9eydwbG90JzogbWV0YSB9KQ0KICAgIHhibWNwbHVnaW4uYWRkRGlyZWN0b3J5SXRlbShoYW5kbGU9YWRkb25faGFuZGxlLCB1cmw9dXJsLCBsaXN0aXRlbT1saSwgaXNGb2xkZXI9Zm9sZGVyKQ0KDQpkZWYgYWRkRGlyQ29udGV4dEVQRyhuYW1lLCB1cmwsIGltZywgZXBnaWQsIGNsZWFubmFtZSwgbWV0YSwgZm9sZGVyPUZhbHNlKToNCiAgICBsaSA9IHhibWNndWkuTGlzdEl0ZW0obmFtZSwgaWNvbkltYWdlPWltZywgdGh1bWJuYWlsSW1hZ2U9aW1nKQ0KICAgIGxpLnNldFByb3BlcnR5KCdJc1BsYXlhYmxlJywgJ2ZhbHNlJykNCiAgICBsaS5zZXRJbmZvKHR5cGU9J3ZpZGVvJywgaW5mb0xhYmVscz17J3Bsb3QnOiBtZXRhIH0pDQogICAgZXBndXJsID0gYnVpbGRfdXJsKHsnbW9kZSc6ICdjaGFuX2VwZycsICdvcHRpb24nOiBlcGdpZCwgJ2xvZ28nOiBpbWcsICd0aXRsZSc6IGNsZWFubmFtZX0pDQogICAgbGkuYWRkQ29udGV4dE1lbnVJdGVtcyhbKCdWZXIgRVBHIGRvIGNhbmFsJywgJ0FjdGl2YXRlV2luZG93KDEwMDI1LCcrZXBndXJsKycscmV0dXJuKScpXSkNCiAgICB4Ym1jcGx1Z2luLmFkZERpcmVjdG9yeUl0ZW0oaGFuZGxlPWFkZG9uX2hhbmRsZSwgdXJsPXVybCwgbGlzdGl0ZW09bGksIGlzRm9sZGVyPWZvbGRlcikNCg0KZGVmIGNoZWNrVXBkYXRlKCk6DQogICAgaWYgdmVyc2FvX2F0dWFsICE9ICdkZXYnOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICByZXNwb25zZSA9IHVybGxpYjIudXJsb3BlbihzZXJ2ZXJVUkwgKyAiXHg3Nlx4NjVceDcyXHg3M1x4NjlceDZmXHg2ZVx4MmVceDc0XHg3OFx4NzQiKQ0KICAgICAgICAgICAgaWYgcmVzcG9uc2UgYW5kIHJlc3BvbnNlLmdldGNvZGUoKSA9PSAyMDA6DQogICAgICAgICAgICAgICAgdmVyc2FvX25ldyA9IHJlc3BvbnNlLnJlYWQoKQ0KICAgICAgICAgICAgICAgIGlmIHZlcnNhb19uZXcgIT0gdmVyc2FvX2F0dWFsOg0KICAgICAgICAgICAgICAgICAgICBub3RpZnkoJ3BsdWdpbi52aWRlby5icmF6aWx0dicsICdCYWl4YW5kbyBhdHVhbGl6YcOnw6NvLi4uJywgMjAwMCkNCiAgICAgICAgICAgICAgICAgICAgZG9VcGRhdGUoKQ0KICAgICAgICAgICAgICAgICAgICB4Ym1jLmV4ZWN1dGVidWlsdGluKCJYQk1DLkNvbnRhaW5lci5SZWZyZXNoKCkiKQ0KICAgICAgICAgICAgcmVzcG9uc2UuY2xvc2UoKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwYXNzDQoNCmRlZiBkb1VwZGF0ZSgpOg0KICAgIFBhdGggPSB4Ym1jLnRy'
love = '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'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))